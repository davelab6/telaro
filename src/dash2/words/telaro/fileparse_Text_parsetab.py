
# fileparse_Text_parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xd7\xcfD\r\x8d\xe4S0\xd3\x9fp\x17\xc7Q/U'
    
_lr_action_items = {'EXCLAMATION':([1,2,6,7,8,9,10,11,12,13,14,15,16,18,21,],[-18,6,-15,-16,-17,-11,-13,-9,-10,-12,6,-7,-14,6,6,]),'QUESTIONMARK':([1,2,6,7,8,9,10,11,12,13,14,15,16,18,21,],[-18,7,-15,-16,-17,-11,-13,-9,-10,-12,7,-7,-14,7,7,]),'NAME':([0,1,2,6,7,8,9,10,11,12,13,14,15,16,17,18,19,21,],[1,-18,8,-15,-16,-17,-11,-13,-9,-10,-12,1,-7,-14,1,8,1,8,]),'SEMICOLON':([1,2,6,7,8,9,10,11,12,13,14,15,16,18,21,],[-18,9,-15,-16,-17,-11,-13,-9,-10,-12,9,-7,-14,9,9,]),'SLASH':([1,2,6,7,8,9,10,11,12,13,14,15,16,18,21,],[-18,10,-15,-16,-17,-11,-13,-9,-10,-12,10,-7,-14,10,10,]),'FULLSTOP':([1,2,6,7,8,9,10,11,12,13,14,15,16,18,21,],[-18,11,-15,-16,-17,-11,-13,-9,-10,-12,11,-7,-14,11,11,]),'COLON':([1,2,6,7,8,9,10,11,12,13,14,15,16,18,21,],[-18,12,-15,-16,-17,-11,-13,-9,-10,-12,12,-7,-14,12,12,]),'TAB':([1,2,6,7,8,9,10,11,12,13,14,15,16,18,21,],[-18,13,-15,-16,-17,-11,-13,-9,-10,-12,13,-7,-14,13,13,]),'COMMA':([1,2,6,7,8,9,10,11,12,13,14,15,16,18,21,],[-18,16,-15,-16,-17,-11,-13,-9,-10,-12,16,-7,-14,16,16,]),'NULL':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,20,21,],[-18,-8,17,-3,-1,-15,-16,-17,-11,-13,-9,-10,-12,-4,-7,-14,-6,-2,-5,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,18,20,21,],[-18,-8,0,-3,-1,-15,-16,-17,-11,-13,-9,-10,-12,-4,-7,-14,-6,-2,-5,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'sentence':([0,14,17,19,],[2,18,2,21,]),'text':([0,],[3,]),'sentences':([0,17,],[4,4,]),'paragraph':([0,17,],[5,20,]),'sentenceending':([2,18,21,],[15,15,15,]),'clausedivider':([2,14,18,21,],[14,19,14,14,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> text","S'",1,None,None,None),
  ('text -> paragraph','text',1,'p_text_para','./fileparse.py',175),
  ('text -> text NULL paragraph','text',3,'p_text_paras','./fileparse.py',181),
  ('paragraph -> sentences','paragraph',1,'p_paragraph_assign','./fileparse.py',191),
  ('sentence -> sentence clausedivider','sentence',2,'p_sentences_ended','./fileparse.py',197),
  ('sentenceending -> clausedivider clausedivider sentence','sentenceending',3,'p_sentenceending_prefixedtwice','./fileparse.py',210),
  ('sentenceending -> clausedivider sentence','sentenceending',2,'p_sentenceending_prefixed','./fileparse.py',223),
  ('sentence -> sentence sentenceending','sentence',2,'p_sentences_divided','./fileparse.py',235),
  ('sentences -> sentence','sentences',1,'p_sentences_single','./fileparse.py',242),
  ('clausedivider -> FULLSTOP','clausedivider',1,'p_clausedivider_expr','./fileparse.py',248),
  ('clausedivider -> COLON','clausedivider',1,'p_clausedivider_expr','./fileparse.py',249),
  ('clausedivider -> SEMICOLON','clausedivider',1,'p_clausedivider_expr','./fileparse.py',250),
  ('clausedivider -> TAB','clausedivider',1,'p_clausedivider_expr','./fileparse.py',251),
  ('clausedivider -> SLASH','clausedivider',1,'p_clausedivider_expr','./fileparse.py',252),
  ('clausedivider -> COMMA','clausedivider',1,'p_clausedivider_expr','./fileparse.py',253),
  ('clausedivider -> EXCLAMATION','clausedivider',1,'p_clausedivider_expr','./fileparse.py',254),
  ('clausedivider -> QUESTIONMARK','clausedivider',1,'p_clausedivider_expr','./fileparse.py',255),
  ('sentence -> sentence NAME','sentence',2,'p_sentence_namesorlinks','./fileparse.py',260),
  ('sentence -> NAME','sentence',1,'p_sentence_name','./fileparse.py',283),
]
